// Print Unique Subsets

/*
Input: N = 3, arr[] = {2,1,2}
Output:(),(1),(1 2),(1 2 2),(2),(2 2)
Explanation:
All possible subsets = (),(2),(1),(1,2),(2),(2,2),(2,1),(2,1,2)
After Sorting each subset = (),(2),(1),(1,2),(2),(2,2),(1,2),(1,2,2)
Unique Susbsets in Lexicographical order = (),(1),(1,2),(1,2,2),(2),(2,2)

*/

#include<bits/stdc++.h>
using namespace std;

void solve(int index, vector<int>arr, vector<vector<int>>&res, vector<int>&ds)
{
  res.push_back(ds);
  for(int i=index;i<arr.size();i++)
  {
    if(i>index && arr[i]==arr[i-1])continue;

    ds.push_back(arr[i]);
    solve(i+1,arr,res,ds);
    ds.pop_back();
  }
}



int main()
{
  int n;
  cout<<"Enter size of array : ";
  cin>>n;

  vector<int>arr(n);
  for(int i=0;i<n;i++)
  {
    cin>>arr[i];
  }

  vector<vector<int>>res;
  vector<int>ds;
  solve(0,arr,res,ds);

  for(int i=0;i<res.size();i++)
  {
    for(int j=0;j<res[i].size();j++)
    {
      cout<<res[i][j]<<" ";
    }
    cout<<endl;
  }
}
