
tc n sc 1
int gcd(int a, int b)
{
 if(b==0)
  return a;
 else
  return gcd(b, a%b);
}

void ArrayRotate (int A[], int n, int k)
{
 int d=-1,i,temp,j;
 for(i=0;i<gcd(n,k);i++)
 {
  j=i;
  temp=A[i];
  while(1)
  {
   d=(j+k)%n;
   if(d==i)
    break;
   A[j]=A[d];
   j=d;
  }
  A[j]=temp;
 }
}




// tc n sc 1

void rotate(vector<int>& nums, int k) {
        int n = nums.size();
        reverse(nums.begin(),nums.end());
        reverse(nums.begin(),nums.begin()+k%n);
        reverse(nums.begin()+k%n,nums.end());
    }



// tc n sc k

class Solution {
public:
	void rotateByOne(vector<int> &nums){
		int n = nums.size(), temp = nums[n-1];
		for(int i=n-1; i>0; i--){
			nums[i] = nums[i-1];
			nums[0] = temp;
		}
	}
    void rotate(vector<int>& nums, int k) {
        for(int i=0; i<k; i++) rotateByOne(nums);
    }
};